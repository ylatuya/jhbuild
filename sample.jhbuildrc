# -*- mode: python -*-

# edit this file to match your settings and copy it to ~/.jhbuildrc

# if you have a GNOME git account, uncomment this line
# repos['git.gnome.org'] = 'ssh://user@git.gnome.org/git/'

# what module set should be used.  The default can be found in
# jhbuild/defaults.jhbuildrc, but can be any of the files in the
# modulesets directory, or even the URL of a module set file on a web
# server.
# moduleset = 'gnome-suites-core-3.0'
#
# A list of the modules to build.  Defaults to the GNOME core:
# modules = [ 'meta-gnome-core' ]

# Or to build GNOME and the GNOME featured apps set:
# moduleset = ['gnome-suites-core-3.0', 'gnome-apps-3.0']
# modules = ['meta-gnome-core', 'meta-gnome-apps-featured']

# Or to build the old GNOME 2.32:
# moduleset = 'gnome2/gnome-2.32'
# modules = ['meta-gnome-desktop']

# what directory should the source be checked out to?
checkoutroot = os.path.expanduser('~/checkout/gnome')

# the prefix to configure/install modules to (must have write access)
prefix = '/opt/gnome'

# custom CFLAGS / environment pieces for the build
# os.environ['CFLAGS'] = '-Wall -g -O0'

# extra arguments to pass to all autogen.sh scripts
# to speed up builds of GNOME, try '--disable-static --disable-gtk-doc'
#autogenargs=''

# On SMP systems you may use something like this to improve compilation time:
# be aware that not all modules compile correctly with make -j2
# You can also use 'make V=0' if you want less output while compiling.
#makeargs = '-j2'
